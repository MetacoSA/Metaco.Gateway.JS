import { Encoders } from "../../dist/gwmtc";

describe("Global", () => 
{
    it("Can convert hex back and forth", () =>
    {
        expect(Encoders.Hex.EncodeData([0x0,0x1,0x15, 0xab])).toEqual("000115ab");
        expect(Encoders.Hex.DecodeData("000115ab")).toEqual([0x0,0x1,0x15, 0xab]);

        expect(Encoders.Hex.EncodeData([0x00,0x08,0x6e,0xaa,0x67,0x78,0x95,0xf9,0x2d,0x4a,0x6c,0x5e,0xf7,0x40,0xc1,0x68,0x93,0x2b,0x5e,0x3f,0x44])).toEqual("00086eaa677895f92d4a6c5ef740c168932b5e3f44");
    });

    it("Can convert base58 back and forth", () =>
    {
        expect(Encoders.Base58Check.EncodeData([0x00, 0x08,0x6e,0xaa,0x67,0x78,0x95,0xf9,0x2d,0x4a,0x6c,0x5e,0xf7,0x40,0xc1,0x68,0x93,0x2b,0x5e,0x3f,0x44])).toEqual("1mayif3H2JDC62S4N3rLNtBNRAiUUP99k");
        expect(Encoders.Base58Check.DecodeData("1mayif3H2JDC62S4N3rLNtBNRAiUUP99k")).toEqual([0x00,0x08,0x6e,0xaa,0x67,0x78,0x95,0xf9,0x2d,0x4a,0x6c,0x5e,0xf7,0x40,0xc1,0x68,0x93,0x2b,0x5e,0x3f,0x44]);
    });
});